@using Microsoft.AspNetCore.Http.Extensions
@using Vidos.Web.Common.Constants
@using X.PagedList
@model IPagedList<Vidos.Services.Models.Product.ViewModels.AllProductsViewModel>


@{
    int taken = 0;
    int itemsToTake = Constants.ProductsPerRow;
    int repeatNumber = (int)Math.Ceiling(Model.Count() / (double)itemsToTake);
    int productsPerRow = Constants.MaxItemsPerRow / Constants.ProductsPerRow;
}

@for (int i = 0; i < repeatNumber; i++)
{
    <div class="row">
        @foreach (var product in Model.Skip(taken).Take(itemsToTake))
        {
            <div class="col-sm-@productsPerRow">
                <div class="shop-item">
                    <div class="image">
                        <a href="@Url.Action("Details", "Products", new {id = product.Id, query = ViewContext.HttpContext.Request.QueryString})">
                            <img src="~/@product.ImagePath" alt="@product.Name" />
                        </a>
                    </div>
                    <div class="title">
                        <h3>@product.Name</h3>
                    </div>
                    <div class="price">
                        @product.Price &#1083;&#1074
                    </div>
                    <div class="description">
                        <p>
                            @product.Description
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>

    taken += itemsToTake;
}

<ul class="pagination pagination-lg">
    @if (Model.HasPreviousPage)
    {
        <li class="page-item">
            <button class="page-link" value="@(Model.PageNumber - 1)">
                &laquo;
            </button>
        </li>
                }
    @for (int i = 0; i < Model.PageCount; i++)
    {
        int pageNum = i + 1;
        if (Model.PageNumber == pageNum)
        {
            <li class="page-item active">
                <button class="page-link" value="@pageNum">@pageNum</button>
            </li>
        }
        else
        {
            <li class="page-item">
                <button class="page-link" value="@pageNum">@pageNum</button>
            </li>
        }
    }
    @if (Model.HasNextPage)
    {
        <li class="page-item">
            <button id="nextPage" class="page-link" value="@(Model.PageNumber + 1)">
                &raquo;
            </button>
        </li>
    }
</ul>
